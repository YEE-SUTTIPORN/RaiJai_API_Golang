definitions:
  models.CategoryCreateRequest:
    properties:
      icon:
        type: string
      name:
        type: string
      type_id:
        type: integer
      user_id:
        type: integer
    required:
    - name
    type: object
  models.CategoryUpdateRequest:
    properties:
      icon:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  models.JsonResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  models.LoginRequest:
    properties:
      name:
        type: string
      password:
        type: string
    required:
    - name
    - password
    type: object
  models.TransactionCreateRequest:
    properties:
      amount:
        type: number
      category_id:
        type: integer
      date:
        type: string
      note:
        type: string
      user_id:
        type: integer
    required:
    - amount
    - category_id
    - date
    - user_id
    type: object
  models.TransactionUpdateRequest:
    properties:
      amount:
        type: number
      category_id:
        type: integer
      date:
        type: string
      note:
        type: string
      user_id:
        type: integer
    required:
    - amount
    - category_id
    - date
    - user_id
    type: object
  models.TypeCreateRequest:
    properties:
      name:
        maxLength: 50
        type: string
    required:
    - name
    type: object
  models.UserCreateRequest:
    properties:
      email:
        maxLength: 100
        type: string
      name:
        maxLength: 100
        type: string
      password:
        maxLength: 50
        minLength: 4
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.UserUpdateRequest:
    properties:
      email:
        maxLength: 100
        type: string
      password:
        maxLength: 50
        minLength: 4
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: User login with username and password
      parameters:
      - description: Login JSON
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: User login
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: เพิ่มผู้ใช้ใหม่เข้าระบบ
      parameters:
      - description: User JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Add a new user
      tags:
      - auth
  /api/categories:
    get:
      description: ดึงข้อมูลหมวดหมู่ทั้งหมด
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.JsonResponse'
            type: array
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: เพิ่มหมวดหมู่
      parameters:
      - description: Category JSON
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Create a new category
      tags:
      - categories
  /api/categories/{id}:
    delete:
      description: ลบหมวดหมู่
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Delete a category
      tags:
      - categories
    get:
      description: ดึงข้อมูลหมวดหมู่ตาม ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Get a single category
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: แก้ไขหมวดหมู่ที่มีอยู่
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category JSON
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Update an existing category
      tags:
      - categories
  /api/transactions:
    get:
      description: ดึงข้อมูลธุรกรรมทั้งหมด
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.JsonResponse'
            type: array
      summary: Get all transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: เพิ่มรายการธุรกรรม
      parameters:
      - description: Transaction JSON
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.TransactionCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Create a new transaction
      tags:
      - transactions
  /api/transactions/{id}:
    delete:
      description: ลบธุรกรรม
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Delete a transaction
      tags:
      - transactions
    get:
      description: ดึงข้อมูลธุรกรรมตาม ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Get a transaction by ID
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: แก้ไขธุรกรรมที่มีอยู่
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      - description: Transaction JSON
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.TransactionUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Update an existing transaction
      tags:
      - transactions
  /api/types:
    get:
      description: ดึงข้อมูลประเภททั้งหมด
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.JsonResponse'
            type: array
      summary: Get all types
      tags:
      - types
    post:
      consumes:
      - application/json
      description: เพิ่มประเภทใหม่เข้าระบบ
      parameters:
      - description: Type JSON
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/models.TypeCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Create a new type
      tags:
      - types
  /api/types/{id}:
    delete:
      description: ลบประเภทที่มีอยู่
      parameters:
      - description: Type ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Delete a type
      tags:
      - types
    get:
      description: ดึงข้อมูลประเภทตาม ID
      parameters:
      - description: Type ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Get a type by ID
      tags:
      - types
    put:
      consumes:
      - application/json
      description: แก้ไขประเภทที่มีอยู่
      parameters:
      - description: Type ID
        in: path
        name: id
        required: true
        type: integer
      - description: Type JSON
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/models.TypeCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Update an existing type
      tags:
      - types
  /api/users:
    get:
      description: ดึงข้อมูลผู้ใช้ทั้งหมด
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.JsonResponse'
            type: array
      summary: Get all users
      tags:
      - users
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: ลบผู้ใช้ตาม ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: ดึงข้อมูลผู้ใช้ตาม ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: แก้ไขข้อมูลผู้ใช้ที่มีอยู่
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JsonResponse'
      summary: Update an existing user
      tags:
      - users
swagger: "2.0"
